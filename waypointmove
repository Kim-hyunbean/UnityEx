using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;


public class WayPointMove : MonoBehaviour
{
    [SerializeField] Transform[] stagePos1to2;
    [SerializeField] Transform[] stagePos2to3;
    [SerializeField] Transform[] stagePos2to1;
    [SerializeField] Transform[] stagePos3to2;
    [SerializeField] Transform[] stagePos2to4;
    [SerializeField] Transform[] stagePos4to2;
    [SerializeField] Transform[] stagePos4to5;
    [SerializeField] Transform[] stagePos5to4;
    [SerializeField] Transform[] stagePos5to6;
    [SerializeField] Transform[] stagePos6to5;
    [SerializeField] Transform stagePos1, stagePos2, stagePos3, stagePos4, stagePos5, stagePos6;
    [SerializeField] float speed = 5f;
    Animator anim;
    int stageNum = 0;
    int pos = 1;
    int way = 0;
    int stPy = 0;
    int playerPos = 0;
    private Vector3 EndPosition;

    // Start is called before the first frame update
    void Start()
    {
        anim = GetComponent<Animator>();
        anim.SetBool("instage", false);
        playerPos = PlayerPrefs.GetInt("savePos");
        Debug.Log(playerPos);
        loadstage();
        
    }
        // Update is called once per frame
        void Update()
    {
        
        
        MovePath();

        if (Input.GetKey(KeyCode.Space) && stPy == 0)
        {
            inthestage();
        }

    }

    public void MovePath()
    {
        //플레이어의 위치가 1일때
        if (pos == 1)
        {   // 오른쪽버튼입력시 2로이동
            if (Input.GetKey(KeyCode.RightArrow) && transform.position == stagePos1to2[0].transform.position)
            {
                EndPosition = stagePos1to2[stageNum].transform.position;
                transform.position = Vector2.MoveTowards
                  (transform.position, EndPosition, speed * Time.deltaTime);
                way = 1;
                anim.SetBool("isWalking", true);

                stPy = 1;

                if (transform.position == stagePos1to2[stageNum].transform.position)
                    stageNum++;
            }
            else if (transform.position != stagePos1to2[stageNum].transform.position && way == 1)
            {
                EndPosition = stagePos1to2[stageNum].transform.position;
                transform.position = Vector2.MoveTowards
                  (transform.position, EndPosition, speed * Time.deltaTime);

                if (transform.position == stagePos1to2[stageNum].transform.position)
                    stageNum++;

                if (stageNum == stagePos1to2.Length)
                {
                    anim.SetBool("isWalking", false);
                    pos = 2;
                    stageNum = 0;

                    stPy = 0;
                    

                }
            }
                
        }
        //플레이어의 위치가 2일때 
        if(pos == 2)
        {
            //위버튼 입력시 3으로 이동
            if(Input.GetKey (KeyCode.UpArrow) && transform.position == stagePos2to3[0].transform.position) 
            {              
                EndPosition = stagePos2to3[stageNum].transform.position;
                transform.position = Vector2.MoveTowards
                  (transform.position, EndPosition, speed * Time.deltaTime);
                way = 2;
                anim.SetBool("isWalking", true);

                stPy = 1;

                if (transform.position == stagePos2to3[stageNum].transform.position)
                    stageNum++;
                
                
            }else if(transform.position != stagePos2to3[0].transform.position && way == 2)
            {
                EndPosition = stagePos2to3[stageNum].transform.position;
                transform.position = Vector2.MoveTowards
                  (transform.position, EndPosition, speed * Time.deltaTime);

                if (transform.position == stagePos2to3[stageNum].transform.position)
                    stageNum++;

                if (stageNum == stagePos2to3.Length)
                {
                    anim.SetBool("isWalking", false);
                    pos = 3;
                    stageNum = 0;
                    stPy = 0;                   
                }
            }
            //왼쪽버튼 입력시 1으로 이동
            if (Input.GetKey(KeyCode.LeftArrow) && transform.position == stagePos2to1[0].transform.position)
            {
                EndPosition = stagePos2to1[stageNum].transform.position;
                transform.position = Vector2.MoveTowards
                  (transform.position, EndPosition, speed * Time.deltaTime);
                way = 3;
                anim.SetBool("isWalking", true);

                stPy = 1;

                if (transform.position == stagePos2to1[stageNum].transform.position)
                    stageNum++;

            }else if (transform.position != stagePos2to1[0].transform.position && way ==3)
            {
                EndPosition = stagePos2to1[stageNum].transform.position;
                transform.position = Vector2.MoveTowards
                  (transform.position, EndPosition, speed * Time.deltaTime);

                if (transform.position == stagePos2to1[stageNum].transform.position)
                    stageNum++;

                if (stageNum == stagePos2to1.Length)
                {
                    anim.SetBool("isWalking", false);
                    pos = 1;
                    stageNum = 0;
                    stPy = 0;
                }
            }
            //아래버튼입력시 4로이동
            if (Input.GetKey(KeyCode.DownArrow) && transform.position == stagePos2to4[0].transform.position)
            {
                EndPosition = stagePos2to4[stageNum].transform.position;
                transform.position = Vector2.MoveTowards
                  (transform.position, EndPosition, speed * Time.deltaTime);
                way = 4;
                anim.SetBool("isWalking", true);

                stPy = 1;

                if (transform.position == stagePos2to4[stageNum].transform.position)
                    stageNum++;

            }
            else if (transform.position != stagePos2to4[0].transform.position && way == 4)
            {
                EndPosition = stagePos2to4[stageNum].transform.position;
                transform.position = Vector2.MoveTowards
                  (transform.position, EndPosition, speed * Time.deltaTime);

                if (transform.position == stagePos2to4[stageNum].transform.position)
                    stageNum++;

                if (stageNum == stagePos2to4.Length)
                {
                    anim.SetBool("isWalking", false);
                    pos = 4;
                    stageNum = 0;
                    stPy = 0;
                }
            }

        }
        //플레이어의 위치가 3일때
        if (pos == 3)
        {
            //아래버튼입력시 2로이동
            if (Input.GetKey(KeyCode.DownArrow) && transform.position == stagePos3to2[0].transform.position)
            {
                EndPosition = stagePos3to2[stageNum].transform.position;
                transform.position = Vector2.MoveTowards
                  (transform.position, EndPosition, speed * Time.deltaTime);
                way = 5;
                anim.SetBool("isWalking", true);

                stPy = 1;

                if (transform.position == stagePos3to2[stageNum].transform.position)
                    stageNum++;

            }
            else if (transform.position != stagePos3to2[0].transform.position && way == 5)
            {
                EndPosition = stagePos3to2[stageNum].transform.position;
                transform.position = Vector2.MoveTowards
                  (transform.position, EndPosition, speed * Time.deltaTime);

                if (transform.position == stagePos3to2[stageNum].transform.position)
                    stageNum++;

                if (stageNum == stagePos3to2.Length)
                {
                    anim.SetBool("isWalking", false);
                    pos = 2;
                    stageNum = 0;
                    stPy = 0;
                }
            }
        }
        //플레이어의 위치가 4일때
        if (pos == 4)
        {
            //왼쪽버튼 입력시 2로이동
            if (Input.GetKey(KeyCode.LeftArrow) && transform.position == stagePos4to2[0].transform.position)
            {
                EndPosition = stagePos4to2[stageNum].transform.position;
                transform.position = Vector2.MoveTowards
                  (transform.position, EndPosition, speed * Time.deltaTime);
                way = 6;
                anim.SetBool("isWalking", true);

                stPy = 1;

                if (transform.position == stagePos4to2[stageNum].transform.position)
                    stageNum++;

            }
            else if (transform.position != stagePos4to2[0].transform.position && way == 6)
            {
                EndPosition = stagePos4to2[stageNum].transform.position;
                transform.position = Vector2.MoveTowards
                  (transform.position, EndPosition, speed * Time.deltaTime);

                if (transform.position == stagePos4to2[stageNum].transform.position)
                    stageNum++;

                if (stageNum == stagePos4to2.Length)
                {
                    anim.SetBool("isWalking", false);
                    pos = 2;
                    stageNum = 0;
                    stPy = 0;
                }
            }
            //오른쪽버튼 입력시 5로 이동
            if (Input.GetKey(KeyCode.RightArrow) && transform.position == stagePos4to5[0].transform.position)
            {
                EndPosition = stagePos4to5[stageNum].transform.position;
                transform.position = Vector2.MoveTowards
                  (transform.position, EndPosition, speed * Time.deltaTime);
                way = 7;
                anim.SetBool("isWalking", true);

                stPy = 1;

                if (transform.position == stagePos4to5[stageNum].transform.position)
                    stageNum++;

            }
            else if (transform.position != stagePos4to5[0].transform.position && way == 7)
            {
                EndPosition = stagePos4to5[stageNum].transform.position;
                transform.position = Vector2.MoveTowards
                  (transform.position, EndPosition, speed * Time.deltaTime);

                if (transform.position == stagePos4to5[stageNum].transform.position)
                    stageNum++;

                if (stageNum == stagePos4to5.Length)
                {
                    anim.SetBool("isWalking", false);
                    pos = 5;
                    stageNum = 0;
                    stPy = 0;
                }
            }
        }
        // 플레이어의 위치가 5일때
        if (pos == 5)
        {
            //아래버튼 입력시 4로이동
            if (Input.GetKey(KeyCode.DownArrow) && transform.position == stagePos5to4[0].transform.position)
            {
                EndPosition = stagePos5to4[stageNum].transform.position;
                transform.position = Vector2.MoveTowards
                  (transform.position, EndPosition, speed * Time.deltaTime);
                way = 8;
                anim.SetBool("isWalking", true);

                stPy = 1;

                if (transform.position == stagePos5to4[stageNum].transform.position)
                    stageNum++;

            }
            else if (transform.position != stagePos5to4[0].transform.position && way == 8)
            {
                EndPosition = stagePos5to4[stageNum].transform.position;
                transform.position = Vector2.MoveTowards
                  (transform.position, EndPosition, speed * Time.deltaTime);

                if (transform.position == stagePos5to4[stageNum].transform.position)
                    stageNum++;

                if (stageNum == stagePos5to4.Length)
                {
                    anim.SetBool("isWalking", false);
                    pos = 4;
                    stageNum = 0;
                    stPy = 0;
                }
            }
            //위버튼 입력시 6로 이동
            if (Input.GetKey(KeyCode.UpArrow) && transform.position == stagePos5to6[0].transform.position)
            {
                EndPosition = stagePos5to6[stageNum].transform.position;
                transform.position = Vector2.MoveTowards
                  (transform.position, EndPosition, speed * Time.deltaTime);
                way = 9;
                anim.SetBool("isWalking", true);

                stPy = 1;

                if (transform.position == stagePos5to6[stageNum].transform.position)
                    stageNum++;

            }
            else if (transform.position != stagePos5to6[0].transform.position && way == 9)
            {
                EndPosition = stagePos5to6[stageNum].transform.position;
                transform.position = Vector2.MoveTowards
                  (transform.position, EndPosition, speed * Time.deltaTime);

                if (transform.position == stagePos5to6[stageNum].transform.position)
                    stageNum++;

                if (stageNum == stagePos5to6.Length)
                {
                    anim.SetBool("isWalking", false);
                    pos = 6;
                    stageNum = 0;
                    stPy = 0;
                }
            }
        }
        // 위치가 6일때
        if (pos == 6)
        {
            //왼쪽버튼 입력시 5로 이동
            if (Input.GetKey(KeyCode.LeftArrow) && transform.position == stagePos6to5[0].transform.position)
            {
                EndPosition = stagePos6to5[stageNum].transform.position;
                transform.position = Vector2.MoveTowards
                  (transform.position, EndPosition, speed * Time.deltaTime);
                way = 10;
                anim.SetBool("isWalking", true);

                stPy = 1;

                if (transform.position == stagePos6to5[stageNum].transform.position)
                    stageNum++;

            }
            else if (transform.position != stagePos6to5[0].transform.position && way == 10)
            {
                EndPosition = stagePos6to5[stageNum].transform.position;
                transform.position = Vector2.MoveTowards
                  (transform.position, EndPosition, speed * Time.deltaTime);

                if (transform.position == stagePos6to5[stageNum].transform.position)
                    stageNum++;

                if (stageNum == stagePos6to5.Length)
                {
                    anim.SetBool("isWalking", false);
                    pos = 5;
                    stageNum = 0;
                    stPy = 0;
                }
            }
        }
    }

    public void inthestage()
    {
        //PlayerPrefs.SetFloat("playerx", this.gameObject.transform.position.x);
        //PlayerPrefs.SetFloat("playery", this.gameObject.transform.position.y);
        anim.SetBool("instage", true);

        if(transform.position == stagePos1.position)
        {
            PlayerPrefs.SetInt("savePos", 0);
        }else if(transform.position == stagePos2.position)
        {
            PlayerPrefs.SetInt("savePos", 1);
        }else if(transform.position == stagePos3.position)
        {
            PlayerPrefs.SetInt("savePos", 2);
        }else if(transform.position == stagePos4.position)
        {
            PlayerPrefs.SetInt("savePos", 3);
        }else if(transform.position == stagePos5.position)
        {
            PlayerPrefs.SetInt("savePos", 4);
        }else if(transform.position == stagePos6.position)
        {
            PlayerPrefs.SetInt("savePos", 5);
        }



    }

    public void loadstage()
    {
        if(playerPos == 0)
        {
            transform.position = stagePos1.position;
            pos = 1;
        }else if(playerPos == 1)
        {
            transform.position = stagePos2.position;
            pos = 2;
        }
        else if(playerPos == 2)
        {
            transform.position = stagePos3.position;
            pos = 3;
        }
        else if(playerPos == 3)
        {
            transform.position = stagePos4.position;
            pos = 4;
        }
        else if(playerPos == 4)
        {
            transform.position = stagePos5.position;
            pos = 5;
        }else if(playerPos == 5)
        {
            transform.position = stagePos6.position;
            pos = 6;
        }
        PlayerPrefs.DeleteKey("savePos");

    }
}
